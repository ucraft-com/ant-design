// mixins for button
// ------------------------
.button-size(@height; @padding-horizontal; @font-size; @border-radius) {
  @padding-vertical: max(
    round((@height - @font-size * @line-height-base) / 2 * 10) / 10 - @border-width-base,
    0
  );
  height: @height;
  padding: @padding-vertical @padding-horizontal;
  font-size: @font-size;
  border-radius: @border-radius;
}

.button-disabled(@color: var(--btn-disable-color); @background: var(--btn-disable-bg); @border: var(--btn-disable-border)) {
  &[disabled] {
    &,
    &:hover,
    &:focus,
    &:active {
      .button-color(@color; @background; @border);

      text-shadow: none;
      box-shadow: none;
    }
  }
}

.button-variant-primary(@color; @background; @background-focus; @background-active) {
  .button-color(@color; @background; @background);

  text-shadow: var(--btn-text-shadow);
  box-shadow: var(--btn-primary-shadow);

  &:hover,
  &:focus {
    .button-color(@color; @background-focus; @background-focus);
  }

  &:active,
  &.active {
    .button-color(@color; @background-active; @background-active);
  }

  .button-disabled();
}

.button-variant-other(@color; @background; @border) {
  .button-color(@color; @background; @border);

  &:hover,
  &:focus {
    .button-color(
        var(--btn-variant-other-active);
        @background;
        var(--btn-variant-other-active)
      );
  }
  &:active,
  &.active {
    .button-color(
        var(--btn-variant-other-active);
        @background;
        var(--btn-variant-other-active)
      );
  }
  .button-disabled();
}
.button-variant-ghost(@color; @border: @color; @background-focus; @background-active) {
  .button-color(@color; transparent; @border);
  text-shadow: none;
  &:hover,
  &:focus {
    & when (@border = transparent) {
      .button-color(@background-focus; transparent; transparent);
    }
    & when not (@border = transparent) {
      .button-color(
          @background-focus;
          transparent;
          @background-focus
      );
    }
  }
  &:active {
    & when (@border = transparent) {
      .button-color(@background-active; transparent; transparent);
    }
    & when not(@border = transparent) {
      .button-color(@background-active; transparent; @background-active);
    }
  }
  .button-disabled();
}
.button-color(@color; @background; @border) {
  color: @color;
  background: @background;
  border-color: @border; // a inside Button which only work in Chrome
  // http://stackoverflow.com/a/17253457
  > a:only-child {
    color: currentColor;
    &::after {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      background: transparent;
      content: '';
    }
  }
}
.button-group-base(@btnClassName) {
  position: relative;
  display: inline-flex;
  > .@{btnClassName},
  > span > .@{btnClassName} {
    position: relative;
    &:hover,
    &:focus,
    &:active {
      z-index: 2;
    }
    &[disabled] {
      z-index: 0;
    }
  }
  .@{btnClassName}-icon-only {
    font-size: @font-size-base;
  }
  // size
  &-lg > .@{btnClassName},
  &-lg > span > .@{btnClassName} {
    .button-size(@btn-height-lg; @btn-padding-horizontal-lg; @btn-font-size-lg; 0);
  }
  &-lg .@{btnClassName}.@{btnClassName}-icon-only {
    .square(@btn-height-lg);
    padding-right: 0;
    padding-left: 0;
  }
  &-sm > .@{btnClassName},
  &-sm > span > .@{btnClassName} {
    .button-size(@btn-height-sm; @btn-padding-horizontal-sm; @font-size-base; 0);
    > .@{iconfont-css-prefix} {
      font-size: @font-size-base;
    }
  }
  &-sm .@{btnClassName}.@{btnClassName}-icon-only {
    .square(@btn-height-sm);
    padding-right: 0;
    padding-left: 0;
  }
}
// Base styles of buttons
// --------------------------------------------------
.btn() {
  position: relative;
  display: inline-block;
  font-weight: @btn-font-weight;
  white-space: nowrap;
  text-align: center;
  background-image: none;
  border: @btn-border-width @btn-border-style transparent;
  box-shadow: @btn-shadow;
  cursor: pointer;
  transition: all 0.3s @ease-in-out;
  user-select: none;
  touch-action: manipulation;
  .button-size(
    @btn-height-base; @btn-padding-horizontal-base; @font-size-base; @btn-border-radius-base
  );
  > .@{iconfont-css-prefix} {
    line-height: 1;
  }
  &,
  &:active,
  &:focus {
    outline: 0;
  }
  &:not([disabled]):hover {
    text-decoration: none;
  }
  &:not([disabled]):active {
    outline: 0;
    box-shadow: none;
  }
  &[disabled] {
    cursor: not-allowed;
    > * {
      pointer-events: none;
    }
  }
  &-lg {
    .button-size(
      @btn-height-lg; @btn-padding-horizontal-lg; @btn-font-size-lg; @btn-border-radius-base
    );
  }
  &-sm {
    .button-size(
      @btn-height-sm; @btn-padding-horizontal-sm; @btn-font-size-sm; @btn-border-radius-sm
    );
  }
}
// primary button style
.btn-primary() {
  .button-variant-primary(
    var(--btn-primary-color);
    var(--btn-primary-bg);
    var(--btn-primary-bg-focus);
    var(--btn-primary-bg-active)
  );
}
// default button style
.btn-default() {
  .button-variant-other(
    var(--btn-default-color);
    var(--btn-default-bg);
    var(--btn-default-border)
  );
  &:hover,
  &:focus,
  &:active {
    text-decoration: none;
    background: var(--btn-default-bg);
  }
}
// ghost button style
.btn-ghost() {
  .button-variant-other(
    var(--btn-ghost-color);
    var(--btn-ghost-bg);
    var(--btn-ghost-border)
  );
}
// dashed button style
.btn-dashed() {
  .button-variant-other(
    var(--btn-default-color);
    var(--btn-default-bg);
    var(--btn-default-border)
  );
  border-style: dashed;
}
// danger button style
.btn-danger() {
  .button-variant-primary(
    var(--btn-danger-color);
    var(--btn-danger-bg);
    var(--btn-danger-bg-focus);
    var(--btn-danger-bg-active)
  );
}
// danger default button style
.btn-danger-default() {
  .button-color(
  var(--error-color);
  var(--btn-default-bg);
  var(--error-color)
  );
  &:hover,
  &:focus {
    .button-color(
       var(--btn-danger-link-focus);
       var(--btn-default-bg);
       var(--btn-danger-link-focus)
    );
  }
  &:active,
  &.active {
    .button-color(
        var(--btn-danger-link-active);
        var(--btn-default-bg);
        var(--btn-danger-link-active)
    );
  }
  .button-disabled();
}
// danger link button style
.btn-danger-link() {
  .button-variant-other(
    var(--error-color);
    transparent;
    transparent
  );
  box-shadow: none;
  &:hover,
  &:focus {
    .button-color(
      var(--btn-danger-link-focus);
      transparent;
      transparent
    );
  }
  &:active {
    .button-color(
      var(--btn-danger-link-active);
      transparent;
      transparent
    );
  }
  .button-disabled(
    var(--disabled-color);
    transparent;
    transparent
  );
}
// link button style
.btn-link() {
  .button-variant-other(
    var(--link-color);
    transparent;
    transparent
  );
  box-shadow: none;
  &:hover {
    background: var(--btn-link-hover-bg);
  }
  &:hover,
  &:focus,
  &:active {
    border-color: transparent;
  }
  .button-disabled(
    var(--disabled-color);
    transparent;
    transparent
  );
}
// text button style
.btn-text() {
  .button-variant-other(
    var(--text-color);
    transparent;
    transparent
  );
  box-shadow: none;
  &:hover,
  &:focus {
    color: var(--text-color);
    background: var(--btn-text-hover-bg);
    border-color: transparent;
  }

  &:active {
    color: var(--text-color);
    background: var(--btn-text-active-bg);
    border-color: transparent;
  }

  .button-disabled(
    var(--disabled-color);
    transparent;
    transparent
  );
}
.btn-danger-text() {
  .button-variant-other(
    var(--error-color);
    transparent;
    transparent
  );
  box-shadow: none;
  &:hover,
  &:focus {
    .button-color(
        var(--btn-danger-link-focus);
        var(--btn-text-hover-bg);
        transparent
    );
  }

  &:active {
    .button-color(
      var(--btn-danger-link-active);
      var(--btn-danger-text-active);
      transparent
    );
  }
  .button-disabled(
    var(--disabled-color);
    transparent;
    transparent
  );
}
// round button
.btn-round(@btnClassName: btn) {
  .button-size(@btn-circle-size; @btn-circle-size / 2; @font-size-base; @btn-circle-size);
  &.@{btnClassName}-lg {
    .button-size(
      @btn-circle-size-lg; @btn-circle-size-lg / 2; @btn-font-size-lg; @btn-circle-size-lg
    );
  }
  &.@{btnClassName}-sm {
    .button-size(
      @btn-circle-size-sm; @btn-circle-size-sm / 2; @font-size-base; @btn-circle-size-sm
    );
  }
}
// square button: the content only contains icon
.btn-square(@btnClassName: btn) {
  .square(@btn-square-size);
  .button-size(@btn-square-size; 0; @btn-square-only-icon-size; @btn-border-radius-base);
  & > * {
    font-size: @btn-square-only-icon-size;
  }
  &.@{btnClassName}-lg {
    .square(@btn-square-size-lg);
    .button-size(@btn-square-size-lg; 0; @btn-square-only-icon-size-lg; @btn-border-radius-base);
    & > * {
      font-size: @btn-square-only-icon-size-lg;
    }
  }
  &.@{btnClassName}-sm {
    .square(@btn-square-size-sm);
    .button-size(@btn-square-size-sm; 0; @btn-square-only-icon-size-sm; @btn-border-radius-base);
    & > * {
      font-size: @btn-square-only-icon-size-sm;
    }
  }
}
// circle button: the content only contains icon
.btn-circle(@btnClassName: btn) {
  min-width: @btn-height-base;
  padding-right: 0;
  padding-left: 0;
  text-align: center;
  border-radius: 50%;
  &.@{btnClassName}-lg {
    min-width: @btn-height-lg;
    border-radius: 50%;
  }
  &.@{btnClassName}-sm {
    min-width: @btn-height-sm;
    border-radius: 50%;
  }
}
// Horizontal button groups style
// --------------------------------------------------
.btn-group(@btnClassName: btn) {
  .button-group-base(@btnClassName);
  .@{btnClassName} + .@{btnClassName},
  .@{btnClassName} + &,
  span + .@{btnClassName},
  .@{btnClassName} + span,
  > span + span,
  & + .@{btnClassName},
  & + & {
    margin-left: -1px;
  }
  .@{btnClassName}-primary + .@{btnClassName}:not(.@{btnClassName}-primary):not([disabled]) {
    border-left-color: transparent;
  }
  .@{btnClassName} {
    border-radius: 0;
  }
  > .@{btnClassName}:first-child,
  > span:first-child > .@{btnClassName} {
    margin-left: 0;
  }
  > .@{btnClassName}:only-child {
    border-radius: @btn-border-radius-base;
  }
  > span:only-child > .@{btnClassName} {
    border-radius: @btn-border-radius-base;
  }
  > .@{btnClassName}:first-child:not(:last-child),
  > span:first-child:not(:last-child) > .@{btnClassName} {
    border-top-left-radius: @btn-border-radius-base;
    border-bottom-left-radius: @btn-border-radius-base;
  }
  > .@{btnClassName}:last-child:not(:first-child),
  > span:last-child:not(:first-child) > .@{btnClassName} {
    border-top-right-radius: @btn-border-radius-base;
    border-bottom-right-radius: @btn-border-radius-base;
  }
  &-sm {
    > .@{btnClassName}:only-child {
      border-radius: @btn-border-radius-sm;
    }
    > span:only-child > .@{btnClassName} {
      border-radius: @btn-border-radius-sm;
    }
    > .@{btnClassName}:first-child:not(:last-child),
    > span:first-child:not(:last-child) > .@{btnClassName} {
      border-top-left-radius: @btn-border-radius-sm;
      border-bottom-left-radius: @btn-border-radius-sm;
    }
    > .@{btnClassName}:last-child:not(:first-child),
    > span:last-child:not(:first-child) > .@{btnClassName} {
      border-top-right-radius: @btn-border-radius-sm;
      border-bottom-right-radius: @btn-border-radius-sm;
    }
  }
  & > & {
    float: left;
  }
  & > &:not(:first-child):not(:last-child) > .@{btnClassName} {
    border-radius: 0;
  }
  & > &:first-child:not(:last-child) {
    > .@{btnClassName}:last-child {
      padding-right: 8px;
      border-top-right-radius: 0;
      border-bottom-right-radius: 0;
    }
  }
  & > &:last-child:not(:first-child) > .@{btnClassName}:first-child {
    padding-left: 8px;
    border-top-left-radius: 0;
    border-bottom-left-radius: 0;
  }
}
